name: Deploy website
on:
  push:
    branches:
      - master
env:
  GLOBAL_ENV: Global environment variable
  PASSWORD: ${{ secrets.MY_PASSWORD }}
jobs:
  before:
    runs-on: ubuntu-latest
    environment: TEST
    steps:
      - name: Show environment secrets
        run: echo ${{ secrets.ENV_PASSWORD }}
  test:
    env:
      JOB_ENV: Job environment variable
    runs-on: ubuntu-latest
    steps:
      - name: Create var
        id: create-var
        run: echo "var=created in before step" >> $GITHUB_OUTPUT
      - name: Read var
        run: echo ${{ steps.create-var.outputs.var }}
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run test
      - name: Output values from env and secrets
        run: |
          echo "global var: $GLOBAL_ENV"
          echo "job var: $JOB_ENV"
          echo "job var with env context: ${{ env.JOB_ENV }}"
          echo "secret password: $PASSWORD"
          echo "secret password with secret context : ${{ secrets.MY_PASSWORD }}"
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.filename }}
      test: ${{ steps.publish.outputs.test }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: |
          find dist/assets/*.js -type f -execdir echo "filename={}" >> $GITHUB_OUTPUT ';'
          echo "test=batatas" >> $GITHUB_OUTPUT
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output dist
        run: ls dist
      - name: Output JS filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Output Batatas
        run: echo "${{ needs.build.outputs.test }}"
      - name: Deploy
        run: echo "Deploying..."
